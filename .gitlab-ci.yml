stages:
    - pytest-test
    - sonarqube-check
    - sonarqube-vulnerability-report

pytest-test:
  stage: pytest-test
  image: python:3.9
  script:
    - pip install pytest pytest-cov
    - make cov
  artifacts:
    reports:
      coverage: coverage.xml
    expire_in: 1 day
  allow_failure: true
  only:
    - master

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  dependencies:
    - pytest-test
  allow_failure: true
  only:
    - master

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  image:
    name: curlimages/curl
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=decontamination-key&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  artifacts:
    reports:
      sast: gl-sast-sonar-report.json
    expire_in: 1 day
  dependencies:
    - sonarqube-check
  allow_failure: true
  only:
    - master
