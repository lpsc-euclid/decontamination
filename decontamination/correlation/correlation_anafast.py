# -*- coding: utf-8 -*-
########################################################################################################################

import numpy as np

import healpy as hp

from scipy.special import legendre

########################################################################################################################

class Correlation_Anafast(object):

    ####################################################################################################################

    def __init__(self, catalog_lon: np.ndarray, catalog_lat: np.ndarray, nside: int, min_sep: float, max_sep: float, n_bins: int, l_max: int):

        ################################################################################################################

        pixels = hp.ang2pix(nside, catalog_lon, catalog_lat, nest = False, lonlat = True)

        cl = hp.anafast(pixels, lmax = l_max)

        ################################################################################################################

        ell = 2.0 * np.arange(l_max) + 1.0

        ################################################################################################################

        theta = np.linspace(min_sep, max_sep, n_bins)

        p = np.array([legendre(i)(max_sep) for i in range(l_max)])

        ################################################################################################################

        return np.sum(ell * cl * p) / (4.0 * np.pi)

########################################################################################################################
