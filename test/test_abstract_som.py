#!/usr/bin/env python3
# -*- coding: utf-8 -*-
########################################################################################################################

import os
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

########################################################################################################################

import unittest
import decontamination

import numpy as np

########################################################################################################################

class JITTests(unittest.TestCase):

    ####################################################################################################################

    def __init__(self, *args, **kwargs):
        
        super().__init__(*args, **kwargs)

        ##

        np.random.seed(0)

        ##

        self.som = decontamination.SOM_PCA(4, 4, 4, np.float32, topology = 'square')

        self.data = np.random.randn(100_000).reshape(25_000, 4).astype(np.float32)

        self.som.train(self.data)

    ####################################################################################################################

    def test1(self):

        expected = np.array([
            [0.35355318, 0.60355340, 0.60355335, 0.35355360],
            [0.60355335, 1.00000000, 1.00000000, 0.60355335],
            [0.60355335, 1.00000000, 1.00000000, 0.60355335],
            [0.35355360, 0.60355335, 0.60355340, 0.35355318],
        ])

        self.assertTrue(np.allclose(self.som.distance_map(), expected))

    ####################################################################################################################

    def test2(self):

        self.som.activation_map(self.data, show_progress_bar = True)

########################################################################################################################

if __name__ == '__main__':

    unittest.main()

########################################################################################################################
