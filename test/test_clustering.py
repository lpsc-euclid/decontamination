#!/usr/bin/env python3 -m pytest
# -*- coding: utf-8 -*-
########################################################################################################################

import os
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

########################################################################################################################

import decontamination

import numpy as np

########################################################################################################################

n_clusters = 10

np.random.seed(0)

data = np.random.rand(10, 10).astype(np.float32)

cluster_ids = decontamination.Clustering.clusterize(data, n_clusters)

########################################################################################################################

def test_clusterize():

    expected_cluster_ids = np.array([0, 1, 2, 0, 3, 4, 4, 5, 6, 7])

    assert np.array_equal(cluster_ids, expected_cluster_ids)

########################################################################################################################

def test_average():

    expected_averaged_data = np.array([
        [0.40668458, 0.74471150, 0.52945685, 0.55665857, 0.22122230, 0.63176477, 0.52484140, 0.75435350, 0.95370543, 0.53263090],
        [0.79172504, 0.52889490, 0.56804454, 0.92559665, 0.07103606, 0.08712930, 0.02021840, 0.83261985, 0.77815676, 0.87001216],
        [0.97861830, 0.79915860, 0.46147937, 0.78052920, 0.11827443, 0.63992100, 0.14335328, 0.94466890, 0.52184830, 0.41466194],
        [0.40668458, 0.74471150, 0.52945685, 0.55665857, 0.22122230, 0.63176477, 0.52484140, 0.75435350, 0.95370543, 0.53263090],
        [0.35950790, 0.43703195, 0.69763120, 0.06022547, 0.66676670, 0.67063785, 0.21038257, 0.12892629, 0.31542835, 0.36371076],
        [0.36458316, 0.27448833, 0.82235170, 0.12011388, 0.20272955, 0.26501733, 0.73705080, 0.17519644, 0.65212786, 0.17026201],
        [0.36458316, 0.27448833, 0.82235170, 0.12011388, 0.20272955, 0.26501733, 0.73705080, 0.17519644, 0.65212786, 0.17026201],
        [0.97645944, 0.46865120, 0.97676110, 0.60484550, 0.73926360, 0.03918779, 0.28280696, 0.12019656, 0.29614020, 0.11872772],
        [0.31798318, 0.41426298, 0.06414749, 0.69247210, 0.56660146, 0.26538950, 0.52324810, 0.09394051, 0.57594650, 0.92929620],
        [0.31856894, 0.66741040, 0.13179787, 0.71632720, 0.28940610, 0.18319136, 0.58651290, 0.02010755, 0.82894003, 0.00469548],
    ], dtype = np.float32)

    averaged_data = decontamination.Clustering.average(data, cluster_ids)

    assert np.allclose(averaged_data, expected_averaged_data)

########################################################################################################################
