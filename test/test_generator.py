#!/usr/bin/env python3 -m pytest
# -*- coding: utf-8 -*-
########################################################################################################################

import os
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

########################################################################################################################

import decontamination

import numpy as np

import healpy as hp

########################################################################################################################

def test_generator():

    expected_lon = np.array([
        102.719864, 15.599923, -19.636955, -36.168823, 9.424824,
        10.163281, 5.0567417, 6.934768, 112.27465, 106.83775,
        93.61164, 187.75731, 190.4358, 190.82045, 212.30304,
        267.1788, 279.40515, 277.19086, 304.6413, 267.2206,
        275.8397, 293.40582, 287.99835, 273.59015, 270.59128,
        297.98737, 47.46375, 44.749233, 60.023884, 12.368536,
        44.96527, 63.03947, 68.499435, 8.578673, 58.05143,
        29.376589, 40.42802, 156.9471, 141.94801, 141.15205,
        107.872, 152.1798, 159.14096, 136.14908, 143.64497,
        241.16335, 218.4277, 219.36299, 187.70685, 200.67302,
        229.77055, 214.32144, 255.56013, 344.5105, 320.45367,
        312.19766, 351.96906, 351.31598, 326.65295, 324.22485,
        358.18646, 285.40305, 308.37485
    ], dtype = np.float32)

    expected_lat = np.array([
        33.201565, 21.000381, 6.3767014, 0.5631256, 1.8634262,
        24.769722, -8.88269, 30.224098, 19.276901, 20.434929,
        -6.1296616, -13.221451, 9.093193, 6.962555, 5.5961456,
        28.139992, -9.556389, -27.604599, -6.3554993, 37.29238,
        -23.474442, -17.147964, -20.058022, 31.433075, -38.419327,
        -6.0436554, -51.08589, -2.3804932, -49.739166, -30.314857,
        -67.22075, -24.609207, -76.082596, -38.879547, -68.97005,
        -18.685776, -31.790375, -54.68962, -40.118286, -17.062813,
        -55.196075, -62.202255, -28.535187, -86.07005, -21.37468,
        -18.32389, -76.07091, -5.5540085, -57.06218, -27.72573,
        -53.003708, -31.556091, -28.955269, -36.65976, -19.330383,
        -23.659348, -37.094955, -39.573074, -30.55101, -18.8079,
        -78.17929, -50.6203, -19.984566
    ], dtype = np.float32)

    nside = 1

    npix = hp.nside2npix(nside)

    pixels = np.arange(npix, dtype = np.int32)
    weight = np.arange(npix, dtype = np.float32)

    generator = decontamination.Generator_NumberDensity(nside, pixels, nest = True)

    lon, lat = generator.generate(weight, 1, seed = 0)

    assert np.allclose(lon, expected_lon)

    assert np.allclose(lat, expected_lat)

########################################################################################################################
