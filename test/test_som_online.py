#!/usr/bin/env python3
# -*- coding: utf-8 -*-
########################################################################################################################

import os
import sys

sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

########################################################################################################################

import pytest
import decontamination

import numpy as np

########################################################################################################################

data = np.random.default_rng(seed = 0).random((25_000, 4), np.float32)

########################################################################################################################

som = decontamination.SOM_Online(4, 4, 4, dtype = np.float32, topology = 'square')

som.init_rand(seed = 0)

som.train(data)

####################################################################################################################

@pytest.mark.capture(no = True)
def test_centroids():

    expected = np.array([
        [[-0.47022098, 0.7303566 , -1.0066836, -0.48172566],
        [-0.57995194, 0.74812454, -0.3929571, -0.24629499],
        [-0.68968296, 0.7658925 , 0.22076944, -0.0108643],
        [-0.7994139, 0.78366053, 0.83449596, 0.22456639]],

        [[-0.04700934, 0.22568421, -0.9492877, -0.3960059],
        [-0.15674032, 0.24345219, -0.33556122, -0.16057523],
        [-0.26647133, 0.26122016, 0.2781653, 0.07485546],
        [-0.37620232, 0.27898815, 0.89189184, 0.31028613]],

        [[0.37620232, -0.27898815, -0.89189184, -0.31028613],
        [0.26647133, -0.26122016, -0.2781653 , -0.07485546],
        [0.15674032, -0.24345219, 0.33556122, 0.16057523],
        [0.04700934, -0.22568421, 0.9492877 , 0.3960059]],

        [[0.7994139, -0.78366053, -0.83449596, -0.22456639],
        [0.68968296, -0.7658925, -0.22076944, 0.0108643],
        [0.57995194, -0.74812454, 0.3929571, 0.24629499],
        [0.47022098, -0.7303566, 1.0066836, 0.48172566]],
    ])

    print(decontamination.array_to_string(som.get_centroids()))

    assert np.allclose(som.get_centroids(), expected)

########################################################################################################################

if __name__ == '__main__':

    pytest.main([__file__])

########################################################################################################################
